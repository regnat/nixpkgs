{ lib
, stdenv
, fetchFromGitHub
, libGL
, libX11
, libevdev
, libxkbcommon
, pixman
, pkg-config
, scdoc
, udev
, wayland
, wayland-protocols
, wlroots
, xwayland
, zig
}:

stdenv.mkDerivation rec {
  pname = "river";
  version = "unstable-2021-04-27";

  src = fetchFromGitHub {
    owner = "ifreund";
    repo = pname;
    rev = "0c8e718d95a6a621b9cba0caa9158915e567b076";
    sha256 = "sha256-c3lzsA2oml7DlfYA5mipHafF3Y3mqY1eJR6e2H8DUMo=";
    fetchSubmodules = true;
  };

  nativeBuildInputs = [
    pkg-config
    scdoc
    wayland-protocols
    zig
  ];
  buildInputs = [
    libGL
    libX11
    libevdev
    libxkbcommon
    pixman
    pixman
    udev
    wayland
    wlroots
    xwayland
  ];

  dontConfigure = true;

  buildPhase = ''
    runHook preBuild
    export HOME=$TMPDIR
    zig build -Dman-pages -Drelease-safe -Dxwayland --prefix $out
    runHook postBuild
  '';

  installPhase = ''
    runHook preInstall
    zig build -Dman-pages -Drelease-safe -Dxwayland --prefix $out install
    runHook postInstall
  '';

  meta = with lib; {
    homepage = "https://github.com/ifreund/river";
    description = "A dynamic tiling wayland compositor";
    longDescription = ''
      river is a dynamic tiling wayland compositor that takes inspiration from
      dwm and bspwm.

      Its design goals are:
      - Simplicity and minimalism, river should not overstep the bounds of a
        window manager.
      - Window management based on a stack of views and tags.
      - Dynamic layouts generated by external, user-written executables.
        (A default rivertile layout generator is provided.)
      - Scriptable configuration and control through a custom wayland protocol
        and separate riverctl binary implementing it.
    '';
    license = licenses.gpl3Plus;
    maintainers = with maintainers; [ branwright1 AndersonTorres ];
    platforms = platforms.linux;
  };
}
